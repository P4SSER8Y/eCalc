import{_ as t,c as d,o as e,a as r}from"./app-Bm08GaxQ.js";const o={},c=r('<h2 id="数值" tabindex="-1"><a class="header-anchor" href="#数值"><span>数值</span></a></h2><h3 id="语法图" tabindex="-1"><a class="header-anchor" href="#语法图"><span>语法图</span></a></h3><p>TODO</p><h3 id="前缀" tabindex="-1"><a class="header-anchor" href="#前缀"><span>前缀</span></a></h3><p>主要用于指示进制</p><table><thead><tr><th>前缀</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>0b</td><td>二进制</td><td><code>0b0101_1010</code></td></tr><tr><td>0o</td><td>八进制</td><td><code>0o640</code></td></tr><tr><td>0d</td><td>十进制</td><td><code>0d37</code></td></tr><tr><td>0x</td><td>十六进制</td><td><code>0xBEEF</code></td></tr></tbody></table><h3 id="本体" tabindex="-1"><a class="header-anchor" href="#本体"><span>本体</span></a></h3><p>本体需要满足以下条件</p><ul><li>数字均不超过当前的进制上限</li><li>必须以数字开头、以数字结尾</li><li>数字之间可以用分隔符间隔，见 <a href="#%E5%88%86%E9%9A%94%E7%AC%A6">分隔符</a></li><li>支持以 e 开头的指数，阶码与尾数的进制相同</li></ul><p><strong>注</strong>：其它地方用于表示正负号的符号位，在此是作为运算符处理。</p><h3 id="后缀" tabindex="-1"><a class="header-anchor" href="#后缀"><span>后缀</span></a></h3><p>主要用于指示数值类型</p><table><thead><tr><th>分类</th><th>后缀</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>无符号整型</td><td>u8</td><td>8 位</td><td><code>256u8</code></td></tr><tr><td></td><td>u16</td><td>16 位</td><td><code>65536u16</code></td></tr><tr><td></td><td>u32</td><td>32 位</td><td><code>2_147_483_648u32</code></td></tr><tr><td></td><td>u64</td><td>64 位</td><td><code></code></td></tr><tr><td></td><td>u128</td><td>128 位</td><td><code></code></td></tr><tr><td></td><td>u256</td><td>256 位</td><td><code></code></td></tr><tr><td>有符号整型</td><td>s8</td><td>8 位</td><td><code></code></td></tr><tr><td></td><td>s16</td><td>16 位</td><td><code></code></td></tr><tr><td></td><td>s32</td><td>32 位</td><td><code></code></td></tr><tr><td></td><td>s64</td><td>64 位</td><td><code></code></td></tr><tr><td></td><td>s128</td><td>128 位</td><td><code></code></td></tr><tr><td></td><td>s256</td><td>256 位</td><td><code></code></td></tr><tr><td>浮点数</td><td>f16</td><td>半精度</td><td><code></code></td></tr><tr><td></td><td>f32</td><td>单精度</td><td><code></code></td></tr><tr><td></td><td>f64</td><td>双精度</td><td><code></code></td></tr><tr><td>其它</td><td>xgray</td><td>格雷码</td><td><code></code></td></tr><tr><td></td><td>xonehot</td><td>独热码</td><td><code></code></td></tr></tbody></table><h3 id="分隔符" tabindex="-1"><a class="header-anchor" href="#分隔符"><span>分隔符</span></a></h3><p>支持以下分隔符：<code>_</code> <code>,</code> <code>&#39;</code></p>',15),a=[c];function l(h,n){return e(),d("div",null,a)}const i=t(o,[["render",l],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/syntax/","title":"语法","lang":"zh-CN","frontmatter":{"title":"语法"},"headers":[{"level":2,"title":"数值","slug":"数值","link":"#数值","children":[{"level":3,"title":"语法图","slug":"语法图","link":"#语法图","children":[]},{"level":3,"title":"前缀","slug":"前缀","link":"#前缀","children":[]},{"level":3,"title":"本体","slug":"本体","link":"#本体","children":[]},{"level":3,"title":"后缀","slug":"后缀","link":"#后缀","children":[]},{"level":3,"title":"分隔符","slug":"分隔符","link":"#分隔符","children":[]}]}],"git":{"updatedTime":1718012248000,"contributors":[{"name":"P4SSER8Y","email":"P4SSER8Y@outlook.com","commits":1}]},"filePathRelative":"syntax/index.md"}');export{i as comp,p as data};
